[{"C:\\Users\\vamsi\\survey_form\\src\\index.js":"1","C:\\Users\\vamsi\\survey_form\\src\\App.js":"2","C:\\Users\\vamsi\\survey_form\\src\\reportWebVitals.js":"3","C:\\Users\\vamsi\\survey_form\\src\\components\\input.jsx":"4"},{"size":558,"mtime":1611559525725,"results":"5","hashOfConfig":"6"},{"size":2503,"mtime":1611666688032,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":1000,"mtime":1611666095353,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12","usedDeprecatedRules":"13"},"1tfo2tq",{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"13"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},"C:\\Users\\vamsi\\survey_form\\src\\index.js",["22"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport bootstrap from \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["23","24"],"C:\\Users\\vamsi\\survey_form\\src\\App.js",["25","26","27"],"import \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport Input from \"./components/input\";\n\nfunction App() {\n  const [title, setTitle] = useState(\"\");\n  const [inputs, setInputs] = useState(0);\n  const [data, setData] = useState([]);\n\n  const typeHandled = (a, b) => {\n    let dummy = [...data];\n    dummy.map((d) => {\n      if (d.id === b) {\n        d.type = a;\n      }\n    });\n    setData(dummy);\n  };\n\n  const lableHandled = (a, b) => {\n    let dummy = [...data];\n    dummy.map((d) => {\n      if (d.id === b) {\n        d.label = a;\n      }\n    });\n    setData(dummy);\n  };\n\n  useEffect(() => {\n    let temp = [];\n    for (let i = 0; i < inputs; i++) {\n      temp.push({ id: i, type: \"\", label: \"\" });\n    }\n    console.log(temp);\n    setData(temp);\n  }, [inputs]);\n  const inputHandled = (e) => {\n    let arr = [];\n    for (let i = 0; i < inputs; i++) {\n      arr.push(\n        <Input\n          key={i}\n          id={i}\n          typeChanged={typeHandled}\n          labelChanged={lableHandled}\n        />\n      );\n    }\n    return arr;\n  };\n  const submitted = (e) => {\n    e.preventDefault();\n    console.log(inputs);\n  };\n  return (\n    <div>\n      <h1 className=\"jumbotron text-center header \">Survey Forms</h1>\n      <div className=\"container\">\n        <form onSubmit={submitted}>\n          <div className=\"mb-3 row\">\n            <label htmlFor=\"title\" className=\"col-sm-2 col-form-label\">\n              <h2>Title :</h2>\n            </label>\n            <div className=\"col-sm-10 mt-3\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"title\"\n                onChange={(e) => setTitle(e.target.value)}\n                required\n              />\n            </div>\n          </div>\n          <div className=\"mb-3 row\">\n            <label htmlFor=\"input\" className=\"col-sm-2 col-form-label\">\n              <h2>Inputs :</h2>\n            </label>\n            <div className=\"col-sm-1 mt-3\">\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                id=\"input\"\n                onChange={(e) => setInputs(e.target.value)}\n                required\n              />\n            </div>\n          </div>\n          <div>{inputHandled()}</div>\n          <div className=\"col-auto\">\n            <button type=\"submit\" className=\"btn btn-primary mb-3\">\n              submit\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\vamsi\\survey_form\\src\\reportWebVitals.js",[],"C:\\Users\\vamsi\\survey_form\\src\\components\\input.jsx",["28"],"import React, { Component } from \"react\";\r\nconst Input = (props) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row  g-2 m-3\">\r\n        <h3>Input {props.id + 1}</h3>\r\n        <div className=\"col-auto\">\r\n          <label htmlFor=\"staticEmail2\" className=\"visually-hidden\">\r\n            Type\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"htmlForm-control mx-2\"\r\n            id=\"staticEmail2\"\r\n            onChange={(e) => props.typeChanged(e.target.value, props.id)}\r\n          />\r\n        </div>\r\n        <div className=\"col-auto\">\r\n          <label htmlFor=\"inputPassword2\" className=\"visually-hidden\">\r\n            Label\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"htmlForm-control mx-2\"\r\n            id=\"inputPassword2\"\r\n            onChange={(e) => props.labelChanged(e.target.value, props.id)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n",{"ruleId":"29","severity":1,"message":"30","line":6,"column":8,"nodeType":"31","messageId":"32","endLine":6,"endColumn":17},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"29","severity":1,"message":"37","line":6,"column":10,"nodeType":"31","messageId":"32","endLine":6,"endColumn":15},{"ruleId":"38","severity":1,"message":"39","line":12,"column":19,"nodeType":"40","messageId":"41","endLine":12,"endColumn":21},{"ruleId":"38","severity":1,"message":"39","line":22,"column":19,"nodeType":"40","messageId":"41","endLine":22,"endColumn":21},{"ruleId":"29","severity":1,"message":"42","line":1,"column":17,"nodeType":"31","messageId":"32","endLine":1,"endColumn":26},"no-unused-vars","'bootstrap' is defined but never used.","Identifier","unusedVar","no-native-reassign",["43"],"no-negated-in-lhs",["44"],"'title' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]